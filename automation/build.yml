parameters:  
- name: buildConfiguration
  displayName: Build Configuration
  type: string
  default: Debug
  values:
  - Debug
  - Release

# manual run only
trigger: none

pool:
  vmImage: 'windows-latest'

variables:
  solutionMario: 'app/AzureWorld/TotallyNotMarioWorld'
  solutionMarioFile: 'TotallyNotMarioWorld.csproj'
  artifactMario: 'Mario'
  solutionLuigi: 'app/AzureWorld/TotallyNotLuigiWorld'
  solutionLuigiFile: 'TotallyNotLuigiWorld.csproj'
  artifactLuigi: 'Luigi'

jobs:
- job: BuildMario
  displayName: Build Mario
  steps: 
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solutionMario)/$(solutionMarioFile)'

  - task: VSBuild@1 
    inputs: 
      solution: '$(solutionMario)/$(solutionMarioFile)'
      platform: $(buildPlatform)
      configuration: ${{ parameters.buildConfiguration }}

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/$(solutionMario)/bin/$(buildPlatform)/${{ parameters.buildConfiguration }}/net6.0'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(artifactMario)'
      OverWrite: true

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/$(artifactMario)'
      artifact: '$(artifactMario)'
      publishLocation: 'pipeline'

  - powershell: |
      $path = "$(Build.SourcesDirectory)\$(solutionMario)"
      $platform = "$(buildPlatform)"
      $buildConfig = "${{ parameters.buildConfiguration }}"
  
      & "$path\bin\$platform\$buildConfig\net6.0\TotallyNotMarioWorld.exe"
    displayName: Run Application

- job: BuildLuigi
  displayName: Build Luigi
  steps: 
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solutionLuigi)/$(solutionLuigiFile)'

  - task: VSBuild@1 
    inputs: 
      solution: '$(solutionLuigi)/$(solutionLuigiFile)'
      platform: $(buildPlatform)
      configuration: ${{ parameters.buildConfiguration }}

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/$(solutionLuigi)/bin/$(buildPlatform)/${{ parameters.buildConfiguration }}/net6.0'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/$(artifactLuigi)'
      OverWrite: true

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/$(artifactLuigi)'
      artifact: '$(artifactLuigi)'
      publishLocation: 'pipeline'
  
  - powershell: |
      $path = "$(Build.SourcesDirectory)\$(solutionLuigi)"
      $platform = "$(buildPlatform)"
      $buildConfig = "${{ parameters.buildConfiguration }}"
  
      & "$path\bin\$platform\$buildConfig\net6.0\TotallyNotLuigiWorld.exe"
    displayName: Run Application